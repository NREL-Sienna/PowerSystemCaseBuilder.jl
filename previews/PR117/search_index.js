var documenterSearchIndex = {"docs":
[{"location":"reference/catalog/#Full-Catalog-of-Systems","page":"Full Catalog of Systems","title":"Full Catalog of Systems","text":"","category":"section"},{"location":"reference/catalog/","page":"Full Catalog of Systems","title":"Full Catalog of Systems","text":"using PowerSystemCaseBuilder # hide\nshow_systems() # hide","category":"page"},{"location":"how_to_guides/add_a_system/#Add-a-System-to-the-Catalog","page":"Add a System to the Catalog","title":"Add a System to the Catalog","text":"","category":"section"},{"location":"how_to_guides/add_a_system/","page":"Add a System to the Catalog","title":"Add a System to the Catalog","text":"This page guides developers in how to add new PowerSystems.Systems to the PowerSystemCaseBuilder.jl SystemCatalog. If you are a user rather than a developer, please refer to how to Select and Load a Power System instead.","category":"page"},{"location":"how_to_guides/add_a_system/#Defining-System-Data-and-Adding-It-To-The-Catalog","page":"Add a System to the Catalog","title":"Defining System Data and Adding It To The Catalog","text":"","category":"section"},{"location":"how_to_guides/add_a_system/","page":"Add a System to the Catalog","title":"Add a System to the Catalog","text":"Adding a new PowerSystems.System to PowerSystemCaseBuilder.jl requires coordinated changes to two repositories: the system is defined and described through custom functions in PowerSystemCaseBuilder.jl, while the underlying data is hosted in the PowerSystemsTestData repository.","category":"page"},{"location":"how_to_guides/add_a_system/","page":"Add a System to the Catalog","title":"Add a System to the Catalog","text":"The steps to complete these changes are:","category":"page"},{"location":"how_to_guides/add_a_system/","page":"Add a System to the Catalog","title":"Add a System to the Catalog","text":"Create a new folder in the PowerSystemsTestData repository and add the System's input data files, such as .csv, .raw, .dyr, .m, and/or .jl files\nDefine a custom build_* function that loads or compiles your System in the appropriate file in PowerSystemCaseBuilder.jl's src/library/ directory. The files are organized according to SystemCategory. See the existing files in src/library/ for examples.\nDefine a new SystemDescriptor in src/system_descriptor_data.jl, with:\nThe build_function argument pointing to your new build_* function\nThe raw_data argument pointing to either the directory you added in PowerSystemsTestData, or a .jl, .raw, or .m file within it. See the existing systems for examples.","category":"page"},{"location":"how_to_guides/add_a_system/#Testing-the-New-System-Locally","page":"Add a System to the Catalog","title":"Testing the New System Locally","text":"","category":"section"},{"location":"how_to_guides/add_a_system/","page":"Add a System to the Catalog","title":"Add a System to the Catalog","text":"Before opening pull requests for both PowerSystemCaseBuilder.jl and PowerSystemsTestData, ensure that your new System builds correctly by testing it locally:","category":"page"},{"location":"how_to_guides/add_a_system/","page":"Add a System to the Catalog","title":"Add a System to the Catalog","text":"Change the DATA_DIR definition in PowerSystemCaseBuilder.jl's src/definitions.jl to point to your local fork/clone of PowerSystemsTestData\nIn a new Julia REPL, Pkg.develop PowerSystemCaseBuilder.jl, pointing to your local fork/clone\nTry using build_system on your new System and check for errors and accuracy\nFinally, revert changes to the DATA_DIR definition before submitting pull requests","category":"page"},{"location":"reference/public/#Public-API-Reference","page":"Public API","title":"Public API Reference","text":"","category":"section"},{"location":"reference/public/#System-Catalog","page":"Public API","title":"System Catalog","text":"","category":"section"},{"location":"reference/public/","page":"Public API","title":"Public API","text":"Modules = [PowerSystemCaseBuilder]\nPages   = [\"system_catalog.jl\"]\nPublic = true\nPrivate = false","category":"page"},{"location":"reference/public/#PowerSystemCaseBuilder.SystemCatalog","page":"Public API","title":"PowerSystemCaseBuilder.SystemCatalog","text":"A container for a catalog of PowerSystems.System data sets\n\n\n\n\n\n","category":"type"},{"location":"reference/public/#PowerSystemCaseBuilder.list_categories-Tuple{SystemCatalog}","page":"Public API","title":"PowerSystemCaseBuilder.list_categories","text":"list_categories(c::SystemCatalog) -> Vector{DataType}\n\n\nReturns a vector of SystemCategorys available in a SystemCatalog\n\n\n\n\n\n","category":"method"},{"location":"reference/public/#PowerSystemCaseBuilder.list_categories-Tuple{}","page":"Public API","title":"PowerSystemCaseBuilder.list_categories","text":"list_categories() -> Vector{DataType}\n\n\nReturns a vector of SystemCategorys available in the PowerSystemCaseBuilder.jl default SystemCatalog\n\n\n\n\n\n","category":"method"},{"location":"reference/public/#Reading-the-Catalog","page":"Public API","title":"Reading the Catalog","text":"","category":"section"},{"location":"reference/public/","page":"Public API","title":"Public API","text":"Modules = [PowerSystemCaseBuilder]\nPages   = [\"print.jl\"]\nPublic = true\nPrivate = false","category":"page"},{"location":"reference/public/#PowerSystemCaseBuilder.list_systems-Tuple{SystemCatalog, Type{<:SystemCategory}}","page":"Public API","title":"PowerSystemCaseBuilder.list_systems","text":"list_systems(\n    sys::SystemCatalog,\n    category::Type{<:SystemCategory};\n    kwargs...\n)\n\n\nPrints a list of the systems available in one SystemCategory in a SystemCatalog\n\nExample\n\nlist_systems(SystemCatalog(), PSISystems)\n\nSee also: show_systems is the preferred usage for the default PowerSystemCaseBuilder.jl catalog\n\n\n\n\n\n","category":"method"},{"location":"reference/public/#PowerSystemCaseBuilder.show_categories-Tuple{}","page":"Public API","title":"PowerSystemCaseBuilder.show_categories","text":"show_categories()\n\n\nPrints a list of the categories available in the PowerSystemCaseBuilder.jl catalog\n\n\n\n\n\n","category":"method"},{"location":"reference/public/#PowerSystemCaseBuilder.show_systems-Tuple{Type{<:SystemCategory}}","page":"Public API","title":"PowerSystemCaseBuilder.show_systems","text":"show_systems(category::Type{<:SystemCategory}; kwargs...)\n\n\nPrints the name and description of all PowerSystems.Systems in a selected SystemCategory in the PowerSystemCaseBuilder.jl catalog\n\n\n\n\n\n","category":"method"},{"location":"reference/public/#PowerSystemCaseBuilder.show_systems-Tuple{}","page":"Public API","title":"PowerSystemCaseBuilder.show_systems","text":"show_systems(; kwargs...)\n\n\nPrints the name and description of all PowerSystems.Systems in the PowerSystemCaseBuilder.jl catalog, grouped by SystemCategory\n\nSee also: show_systems for a selected category\n\n\n\n\n\n","category":"method"},{"location":"reference/public/#Categories-of-Systems","page":"Public API","title":"Categories of Systems","text":"","category":"section"},{"location":"reference/public/","page":"Public API","title":"Public API","text":"SystemCategory","category":"page"},{"location":"reference/public/#PowerSystemCaseBuilder.SystemCategory","page":"Public API","title":"PowerSystemCaseBuilder.SystemCategory","text":"Supertype of categories that group test PowerSystems.Systems for similar use     cases\n\nCurrent subtypes with example Systems for running test simulations include:\n\nPSISystems\nPSIDSystems\n\nSubtypes for testing other packages include:\n\nPSYTestSystems\nPSSEParsingTestSystems\nMatpowerTestSystems\nPSITestSystems\nPSIDTestSystems\n\n\n\n\n\n","category":"type"},{"location":"reference/public/","page":"Public API","title":"Public API","text":"Modules = [PowerSystemCaseBuilder]\nPages   = [\"PowerSystemCaseBuilder.jl\"]\nPublic = true\nPrivate = false\nFilter = t -> !(t in [SystemCategory])","category":"page"},{"location":"reference/public/#PowerSystemCaseBuilder.MatpowerTestSystems","page":"Public API","title":"PowerSystemCaseBuilder.MatpowerTestSystems","text":"Category of PowerSystems.Systems to test parsing Matpower files.\n\nSystems only include data for the power flow case.\n\n\n\n\n\n","category":"type"},{"location":"reference/public/#PowerSystemCaseBuilder.PSIDSystems","page":"Public API","title":"PowerSystemCaseBuilder.PSIDSystems","text":"Category of example PowerSystems.Systems for running     PowerSimulationsDynamics.jl     simulations.\n\n\n\n\n\n","category":"type"},{"location":"reference/public/#PowerSystemCaseBuilder.PSIDTestSystems","page":"Public API","title":"PowerSystemCaseBuilder.PSIDTestSystems","text":"Category of PowerSystems.Systems for PowerSimulationsDynamics.jl package testing.\n\nwarning: Warning\nNot all Systems are functional.\n\n\n\n\n\n","category":"type"},{"location":"reference/public/#PowerSystemCaseBuilder.PSISystems","page":"Public API","title":"PowerSystemCaseBuilder.PSISystems","text":"Category of example PowerSystems.Systems for running     PowerSimulations.jl     operations problems and simulations.\n\n\n\n\n\n","category":"type"},{"location":"reference/public/#PowerSystemCaseBuilder.PSITestSystems","page":"Public API","title":"PowerSystemCaseBuilder.PSITestSystems","text":"Category of PowerSystems.Systems for PowerSimulations.jl package testing.\n\nwarning: Warning\nNot all Systems are functional.\n\n\n\n\n\n","category":"type"},{"location":"reference/public/#PowerSystemCaseBuilder.PSSEParsingTestSystems","page":"Public API","title":"PowerSystemCaseBuilder.PSSEParsingTestSystems","text":"Category of PowerSystems.Systems to test parsing PSSe .raw files. \n\nSystems only include data for the power flow case.\n\n\n\n\n\n","category":"type"},{"location":"reference/public/#PowerSystemCaseBuilder.PSYTestSystems","page":"Public API","title":"PowerSystemCaseBuilder.PSYTestSystems","text":"Category of PowerSystems.Systems for PowerSystems.jl package testing.\n\nwarning: Warning\nNot all Systems are functional.\n\n\n\n\n\n","category":"type"},{"location":"reference/public/#Building-a-System","page":"Public API","title":"Building a System","text":"","category":"section"},{"location":"reference/public/","page":"Public API","title":"Public API","text":"Modules = [PowerSystemCaseBuilder]\nPages   = [\"build_system.jl\"]\nPublic = true\nPrivate = false","category":"page"},{"location":"reference/public/#PowerSystemCaseBuilder.build_system","page":"Public API","title":"PowerSystemCaseBuilder.build_system","text":"build_system(\n    category::Type{<:SystemCategory},\n    name::String;\n    ...\n) -> Any\nbuild_system(\n    category::Type{<:SystemCategory},\n    name::String,\n    print_stat::Bool;\n    force_build,\n    assign_new_uuids,\n    skip_serialization,\n    system_catalog,\n    kwargs...\n) -> Any\n\n\nBuilds a PowerSystems.System from one of the predefined categories of test systems\n\nArguments\n\ncategory::Type{<:SystemCategory}: A subtype of SystemCategory\nname::String: Name of the System to build\n\nAccepted Key Words\n\nprint_stat::Bool = false: Print statistics about the system build process\nforce_build::Bool: true runs entire build process, false (Default) uses deserializiation if possible\nassign_new_uuids::Bool: Assign new UUIDs to the system and all components if  deserialization is used. Default is true.\nskip_serialization::Bool: Default is false\nsystem_catalog::SystemCatalog: Defaults to the PowerSystemCaseBuilder.jl catalog of Systems\n\n\n\n\n\n","category":"function"},{"location":"reference/public/#Utilities","page":"Public API","title":"Utilities","text":"","category":"section"},{"location":"reference/public/","page":"Public API","title":"Public API","text":"Modules = [PowerSystemCaseBuilder]\nPages   = [\"system_descriptor.jl\",\n            \"system_build_stats.jl\"]\nPublic = true\nPrivate = false","category":"page"},{"location":"reference/public/#PowerSystemCaseBuilder.SystemDescriptor-Tuple{}","page":"Public API","title":"PowerSystemCaseBuilder.SystemDescriptor","text":"SystemDescriptor(\n;\n    name,\n    description,\n    category,\n    build_function,\n    raw_data,\n    download_function,\n    stats,\n    supported_arguments\n)\n\n\nConstructs a container for describing, categorizing, and building a PowerSystems.System\n\nArguments\n\nname::AbstractString: Unique name of the System\ndescription::AbstractString: Phrase describing the System and key distinguishing features from other systems in the catalog\ncategory::Type{<:SystemCategory}: A subtype of SystemCategory for categorizing this System within the catalog\nraw_data::AbstractString: A path pointing to the System's data directory, .jl file, or parseable .m or .raw file in PowerSystemsTestData\nbuild_function::Function: A custom Function for building this System. See src/library files.\ndownload_function::Union{Nothing, Function}: Typically unused\nstats::Union{Nothing,SystemBuildStats}: Container for summary statistics on the build process\nsupported_arguments::Vector{SystemArgument}: Additional arguments to pass to the build_function\n\n\n\n\n\n","category":"method"},{"location":"reference/public/#PowerSystemCaseBuilder.SystemBuildStats-Tuple{}","page":"Public API","title":"PowerSystemCaseBuilder.SystemBuildStats","text":"SystemBuildStats(\n;\n    count,\n    initial_construct_time,\n    serialize_time,\n    min_deserialize_time,\n    max_deserialize_time,\n    total_deserialize_time\n)\n\n\nReturns a container for the summary statistics on the build process for a PowerSystems.System\n\n\n\n\n\n","category":"method"},{"location":"how_to_guides/explore_load/#Select-and-Load-a-Power-System","page":"Select and Load a Power System","title":"Select and Load a Power System","text":"","category":"section"},{"location":"how_to_guides/explore_load/","page":"Select and Load a Power System","title":"Select and Load a Power System","text":"using PowerSystemCaseBuilder","category":"page"},{"location":"how_to_guides/explore_load/","page":"Select and Load a Power System","title":"Select and Load a Power System","text":"PowerSystemCaseBuilder.jl offers a catalog of power system test data, already formatted and available to load as PowerSystems.System objects.","category":"page"},{"location":"how_to_guides/explore_load/#Select","page":"Select and Load a Power System","title":"Select","text":"","category":"section"},{"location":"how_to_guides/explore_load/","page":"Select and Load a Power System","title":"Select and Load a Power System","text":"View the available categories of power systems in the catalog using show_categories:","category":"page"},{"location":"how_to_guides/explore_load/","page":"Select and Load a Power System","title":"Select and Load a Power System","text":"show_categories()","category":"page"},{"location":"how_to_guides/explore_load/","page":"Select and Load a Power System","title":"Select and Load a Power System","text":"Choose a category, or explore the SystemCategory documentation to learn about each category.","category":"page"},{"location":"how_to_guides/explore_load/","page":"Select and Load a Power System","title":"Select and Load a Power System","text":"Use show_systems to see the name and description of the available PowerSystems.Systems in the selected category, e.g, PSISystems:","category":"page"},{"location":"how_to_guides/explore_load/","page":"Select and Load a Power System","title":"Select and Load a Power System","text":"show_systems(PSISystems)","category":"page"},{"location":"how_to_guides/explore_load/#Build","page":"Select and Load a Power System","title":"Build","text":"","category":"section"},{"location":"how_to_guides/explore_load/","page":"Select and Load a Power System","title":"Select and Load a Power System","text":"Finally, use build_system to load your selected system:","category":"page"},{"location":"how_to_guides/explore_load/","page":"Select and Load a Power System","title":"Select and Load a Power System","text":"sys = build_system(PSISystems, \"5_bus_hydro_ed_sys\")","category":"page"},{"location":"how_to_guides/explore_load/#Next-Steps","page":"Select and Load a Power System","title":"Next Steps","text":"","category":"section"},{"location":"how_to_guides/explore_load/","page":"Select and Load a Power System","title":"Select and Load a Power System","text":"Refer to the PowerSystems.jl documentation for how to modify the test system or build your own, and the PowerSimulations.jl and PowerSimulationsDynamics.jl documentation for how to set up and run simulations.","category":"page"},{"location":"reference/developer_guidelines/#Developer-Guidelines","page":"Developer Guidelines","title":"Developer Guidelines","text":"","category":"section"},{"location":"reference/developer_guidelines/","page":"Developer Guidelines","title":"Developer Guidelines","text":"In order to contribute to PowerSystemCaseBuilder.jl repository please read the following sections of InfrastructureSystems.jl and SiennaTemplate.jl documentation in detail:","category":"page"},{"location":"reference/developer_guidelines/","page":"Developer Guidelines","title":"Developer Guidelines","text":"Style Guide\nDocumentation Best Practices\nContributing Guidelines","category":"page"},{"location":"reference/developer_guidelines/","page":"Developer Guidelines","title":"Developer Guidelines","text":"Pull requests are always welcome to fix bugs or add additional modeling capabilities.","category":"page"},{"location":"reference/developer_guidelines/","page":"Developer Guidelines","title":"Developer Guidelines","text":"All the code contributions need to include tests with a minimum coverage of 70%","category":"page"},{"location":"#PowerSystemCaseBuilder.jl","page":"Welcome","title":"PowerSystemCaseBuilder.jl","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"CurrentModule = PowerSystemCaseBuilder","category":"page"},{"location":"#Overview","page":"Welcome","title":"Overview","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"PowerSystemCaseBuilder.jl is a Julia package that provides a library of power systems test cases using the PowerSystems.jl data model: PowerSystems.System.","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"PowerSystemCaseBuilder.jl is a simple tool to build power systems ranging from 5-Bus systems to entire grid systems for the purpose of testing or prototyping power system models. This package facilitates the open sharing of data sets for power systems modeling.","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"The main features include:","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"Comprehensive and extensible library of power systems for modeling.\nAutomated serialization/de-serialization of cataloged PowerSystems.Systems.","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"PowerSystemCaseBuilder.jl is an active project under development, and we welcome your feedback, suggestions, and bug reports.","category":"page"},{"location":"#About-Sienna","page":"Welcome","title":"About Sienna","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"PowerSystemCaseBuilder.jl is part of the National Renewable Energy Laboratory's Sienna ecosystem, an open source framework for power system modeling, simulation, and optimization. The Sienna ecosystem can be found on Github. It contains three applications:","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"Sienna\\Data enables efficient data input, analysis, and transformation\nSienna\\Ops enables enables system scheduling simulations by formulating and solving optimization problems\nSienna\\Dyn enables system transient analysis including small signal stability and full system dynamic simulations","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"Each application uses multiple packages in the Julia programming language.","category":"page"},{"location":"#Installation","page":"Welcome","title":"Installation","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"See the Sienna installation page to install PowerSystemCaseBuilder.jl and other Sienna\\Data packages.","category":"page"},{"location":"reference/internal/#Internal-API","page":"Internals","title":"Internal API","text":"","category":"section"},{"location":"reference/internal/","page":"Internals","title":"Internals","text":"Modules = [PowerSystemCaseBuilder]\nPublic = false","category":"page"},{"location":"reference/internal/#PowerSystemCaseBuilder.SystemArgument","page":"Internals","title":"PowerSystemCaseBuilder.SystemArgument","text":"An argument to pass to a SystemDescriptor's build_function\n\n\n\n\n\n","category":"type"},{"location":"reference/internal/#PowerSystemCaseBuilder.SystemArgument-Tuple{}","page":"Internals","title":"PowerSystemCaseBuilder.SystemArgument","text":"SystemArgument(; name, default, allowed_values)\n\n\nReturns an argument to pass to a SystemDescriptor's build_function \n\nExample\n\nSystemArgument(;\n                name = :add_forecasts,\n                default = true,\n                allowed_values = Set([true, false]),\n            )\n\n\n\n\n\n","category":"method"},{"location":"reference/internal/#Downloads.download","page":"Internals","title":"Downloads.download","text":"download(\n    repo::AbstractString,\n    branch::AbstractString,\n    folder::AbstractString\n) -> Any\ndownload(\n    repo::AbstractString,\n    branch::AbstractString,\n    folder::AbstractString,\n    force::Bool\n) -> Any\n\n\nDownload Data from a \"branch\" into a \"data\" folder in given argument path. Skip the actual download if the folder already exists and force=false. Returns the downloaded folder name.\n\n\n\n\n\n","category":"function"},{"location":"reference/internal/#PowerSystemCaseBuilder.clear_all_serialized_systems-Tuple{String}","page":"Internals","title":"PowerSystemCaseBuilder.clear_all_serialized_systems","text":"clear_all_serialized_systems(path::String)\n\n\nDelete all data and files for PowerSystems.Systems that have been serialized\n\n\n\n\n\n","category":"method"},{"location":"reference/internal/#PowerSystemCaseBuilder.clear_serialized_system","page":"Internals","title":"PowerSystemCaseBuilder.clear_serialized_system","text":"clear_serialized_system(name::String)\nclear_serialized_system(\n    name::String,\n    case_args::Dict{Symbol}\n)\n\n\nDelete all files and references associated with a PowerSystems.System that has been serialized\n\nUseful while debugging adding a new System to PowerSystemCaseBuilder.jl to ensure all data and references are removed and that the new build is clean\n\n\n\n\n\n","category":"function"},{"location":"reference/internal/#PowerSystemCaseBuilder.filter_descriptor_kwargs-Tuple{SystemDescriptor}","page":"Internals","title":"PowerSystemCaseBuilder.filter_descriptor_kwargs","text":"filter_descriptor_kwargs(\n    descriptor::SystemDescriptor;\n    kwargs...\n) -> Dict{Symbol, Any}\n\n\nReturn the keyword arguments passed by the user that apply to the descriptor. Add any default values for fields not passed by the user.\n\n\n\n\n\n","category":"method"},{"location":"reference/internal/#PowerSystemCaseBuilder.get_total_system_count-Tuple{SystemCatalog}","page":"Internals","title":"PowerSystemCaseBuilder.get_total_system_count","text":"get_total_system_count(sys::SystemCatalog) -> Int64\n\n\nReturns the total number of systems in a SystemCatalog\n\n\n\n\n\n","category":"method"},{"location":"reference/internal/#PowerSystemCaseBuilder.serialize_case_parameters-Tuple{Dict{Symbol}}","page":"Internals","title":"PowerSystemCaseBuilder.serialize_case_parameters","text":"serialize_case_parameters(case_args::Dict{Symbol}) -> Any\n\n\nCreates a JSON file informing the user about the meaning of the hash value in the file path if it doesn't exist already \n\n\n\n\n\n","category":"method"}]
}
